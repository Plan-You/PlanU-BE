<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.planu.group_meeting.dao.GroupDAO">
    <insert id="insertGroup" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO GROUP_ (NAME, PROFILE)
        VALUES (#{name}, #{groupImageUrl})
    </insert>

    <select id="findUserIdByUserName" resultType="java.lang.Long">
        SELECT id
        FROM USER
        WHERE username = #{userName}
    </select>

    <insert id="insertGroupUser">
        INSERT INTO GROUP_USER (user_id, group_id, group_role, group_state)
        VALUES (#{userId}, #{groupId}, #{groupRole}, #{groupState})
    </insert>

    <select id="findGroupById" resultType="com.planu.group_meeting.entity.Group">
        SELECT
        ID,
        NAME,
        PROFILE AS groupImageUrl,
        CREATED_DATE AS createdDate,
        UPDATED_DATE AS updatedDate
        FROM GROUP_
        WHERE ID = #{groupId}
    </select>


    <select id="findGroupUserByUserIdAndGroupId" resultType="com.planu.group_meeting.entity.GroupUser">
        SELECT
        USER_ID AS userId,
        GROUP_ID AS groupId,
        GROUP_ROLE AS groupRole,
        GROUP_STATE AS groupState,
        CREATED_DATE AS createdDate,
        UPDATED_DATE AS updatedDate
        FROM GROUP_USER
        WHERE USER_ID = #{userId} AND GROUP_ID = #{groupId}
    </select>

    <update id="updateGroupUserGroupStatus">
        UPDATE GROUP_USER
        SET GROUP_STATE = 1, UPDATED_DATE = CURRENT_TIMESTAMP
        WHERE USER_ID = #{userId} AND GROUP_ID = #{groupId}
    </update>

    <select id="findNameByGroupId" resultType="String">
        select name
        from GROUP_
        where id = #{groupId}
    </select>

    <select id="findGroupsByUserId" resultType="com.planu.group_meeting.dto.GroupResponseDTO">
        SELECT
        g.ID AS groupId,
        g.NAME AS groupName,
        g.PROFILE AS groupImageUrl,
        COUNT(gu.USER_ID) AS participant
        FROM
        GROUP_USER gu
        JOIN
        GROUP_ g ON gu.GROUP_ID = g.ID
        WHERE
        gu.USER_ID = #{userId}
        GROUP BY
        g.ID, g.NAME, g.PROFILE;
    </select>

    <delete id="deleteGroupUserByUserIdAndGroupId" parameterType="map">
        DELETE FROM GROUP_USER
        WHERE USER_ID = #{userId} AND GROUP_ID = #{groupId}
    </delete>



</mapper>