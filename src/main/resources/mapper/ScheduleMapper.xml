<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.planu.group_meeting.dao.ScheduleDAO">
    <resultMap id="ScheduleDetailsResponseMap" type="com.planu.group_meeting.dto.ScheduleDto$ScheduleDetailsResponse">
        <id property="id" column="scheduleId"/>
        <result property="title" column="title"/>
        <result property="startDateTime" column="startDateTime"/>
        <result property="endDateTime" column="endDateTime"/>
        <result property="color" column="color"/>
        <result property="location" column="location"/>
        <result property="latitude" column="latitude"/>
        <result property="longitude" column="longitude"/>
        <result property="memo" column="memo"/>
        <collection property="participants"
                    ofType="com.planu.group_meeting.dto.ParticipantDto$ScheduleParticipantResponse">
            <result property="name" column="participantName"/>
            <result property="username" column="participantUsername"/>
            <result property="profileImage" column="participantProfileImage"/>
        </collection>
        <collection property="unregisteredParticipants"
                    ofType="com.planu.group_meeting.dto.ParticipantDto$UnregisteredParticipantResponse">
            <result property="name" column="unregisteredParticipantName"/>
        </collection>
    </resultMap>

    <insert id="insertSchedule" parameterType="com.planu.group_meeting.entity.Schedule"
            useGeneratedKeys="true" keyProperty="id">
        INSERT INTO SCHEDULE (TITLE, START_DATETIME, END_DATETIME, COLOR, MEMO, LOCATION, LATITUDE, LONGITUDE, USER_ID)
        VALUES (#{title}, #{startDateTime}, #{endDateTime}, #{color}, #{memo}, #{location},
        #{latitude},#{longitude},#{userId})
    </insert>

    <update id="updateSchedule" parameterType="com.planu.group_meeting.entity.Schedule">
        UPDATE SCHEDULE
        SET
        TITLE = #{title},
        START_DATETIME = #{startDateTime},
        END_DATETIME = #{endDateTime},
        COLOR = #{color},
        SCHEDULE_VISIBILITY = #{visibility},
        MEMO = #{memo},
        LOCATION = #{location},
        LATITUDE = #{latitude},
        LONGITUDE = #{longitude}
        WHERE
        ID = #{id}
    </update>

    <delete id = "deleteScheduleById" parameterType="long">
        DELETE FROM SCHEDULE
        WHERE ID = #{scheduleId}
    </delete>

    <select id="findById" resultType="com.planu.group_meeting.entity.Schedule">
        SELECT
        ID,
        USER_ID,
        TITLE,
        START_DATETIME AS startDateTime,
        END_DATETIME AS endDateTime,
        COLOR,
        SCHEDULE_VISIBILITY AS visibility,
        MEMO,
        LOCATION,
        LATITUDE,
        LONGITUDE,
        CREATED_DATE AS createdAt,
        UPDATED_DATE AS updatedAt
        FROM
        SCHEDULE
        WHERE
        ID = #{scheduleId}
    </select>


    <select id="existsScheduleByDate" resultType="boolean">
        SELECT EXISTS (
            SELECT 1
            FROM SCHEDULE
            WHERE DATE(START_DATETIME) = #{date} AND USER_ID = #{userId}
        )
    </select>

    <select id="getScheduleDetails" resultMap="ScheduleDetailsResponseMap">
        SELECT
        s.ID AS scheduleId,
        s.TITLE AS title,
        s.START_DATETIME AS startDateTime,
        s.END_DATETIME AS endDateTime,
        s.COLOR AS color,
        s.LOCATION AS location,
        s.LATITUDE AS latitude,
        s.LONGITUDE AS longitude,
        s.MEMO AS memo,

        u.NAME AS participantName,
        u.USERNAME AS participantUsername,
        u.PROFILE_IMG_URL AS participantProfileImage,
        up.PARTICIPANT_NAME AS unregisteredParticipantName
        FROM SCHEDULE s
        LEFT JOIN SCHEDULE_PARTICIPANT sp ON s.ID = sp.SCHEDULE_ID
        LEFT JOIN USER u ON sp.USER_ID = u.ID
        LEFT JOIN UNREGISTERED_PARTICIPANT up ON s.ID = up.SCHEDULE_ID
        WHERE s.ID = #{scheduleId}
    </select>

    <select id="getScheduleList" resultType="com.planu.group_meeting.dto.ScheduleDto$ScheduleListResponse">
        <![CDATA[
        SELECT
        S.ID,
        NULL AS groupId,
        S.TITLE,
        S.LOCATION,
        DATE_FORMAT(S.START_DATETIME, '%H:%i') AS startTime,
        DATE_FORMAT(S.END_DATETIME, '%H:%i') AS endTime,
        S.COLOR
    FROM SCHEDULE S
    WHERE S.USER_ID = #{userId}
    AND S.START_DATETIME >= #{startDateTime}
    AND S.END_DATETIME <= #{endDateTime}

    UNION

    SELECT
        GS.ID,
        GS.GROUP_ID AS groupId,
        GS.TITLE,
        GS.LOCATION,
        DATE_FORMAT(GS.START_DATETIME, '%H:%i') AS startTime,
        DATE_FORMAT(GS.END_DATETIME, '%H:%i') AS endTime,
        GS.COLOR
    FROM GROUP_SCHEDULE GS
    JOIN GROUP_SCHEDULE_PARTICIPANT GSP ON GS.ID = GSP.GROUP_SCHEDULE_ID
    WHERE GSP.USER_ID = #{userId}
    AND GS.START_DATETIME >= #{startDateTime}
    AND GS.END_DATETIME <= #{endDateTime}
    ORDER BY startTime
    ]]>
    </select>




</mapper>