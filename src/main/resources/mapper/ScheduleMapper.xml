<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.planu.group_meeting.dao.ScheduleDAO">
    <resultMap id="ScheduleDetailsResponseMap" type="com.planu.group_meeting.dto.ScheduleDto$ScheduleDetailsResponse">
        <id property="id" column="scheduleId"/>
        <result property="title" column="title"/>
        <result property="startDateTime" column="startDateTime"/>
        <result property="endDateTime" column="endDateTime"/>
        <result property="color" column="color"/>
        <result property="location" column="location"/>
        <result property="memo" column="memo"/>
        <collection property="participants" ofType="com.planu.group_meeting.dto.ParticipantDto$ScheduleParticipantResponse">
            <result property="id" column="participantId"/>
            <result property="name" column="participantName"/>
        </collection>
        <collection property="unregisteredParticipants" ofType="com.planu.group_meeting.dto.ParticipantDto$UnregisteredParticipantResponse">
            <result property="name" column="unregisteredParticipantName"/>
        </collection>
    </resultMap>


    <insert id="insertSchedule" parameterType="com.planu.group_meeting.entity.Schedule"
            useGeneratedKeys="true" keyProperty="id">
        INSERT INTO SCHEDULE (TITLE, START_DATETIME, END_DATETIME, COLOR, MEMO, LOCATION, USER_ID)
        VALUES (#{title}, #{startDateTime}, #{endDateTime}, #{color}, #{memo}, #{location}, #{userId})
    </insert>

    <insert id="insertScheduleParticipants" parameterType="list">
        INSERT INTO SCHEDULE_PARTICIPANT (SCHEDULE_ID, USER_ID)
        VALUES
        <foreach collection="list" item="participant" separator=",">
            (#{participant.scheduleId}, #{participant.userId})
        </foreach>
    </insert>

    <insert id="insertUnregisteredParticipants" parameterType="list">
        INSERT INTO UNREGISTERED_PARTICIPANT (SCHEDULE_ID, PARTICIPANT_NAME)
        VALUES
        <foreach collection="list" item="participant" separator=",">
            (#{participant.scheduleId}, #{participant.participantName})
        </foreach>
    </insert>

    <select id="getScheduleDetails" resultMap="ScheduleDetailsResponseMap">
        SELECT
        s.ID AS scheduleId,
        s.TITLE AS title,
        s.START_DATETIME AS startDateTime,
        s.END_DATETIME AS endDateTime,
        s.COLOR AS color,
        s.LOCATION AS location,
        s.MEMO AS memo,
        u.ID AS participantId,
        u.NAME AS participantName,
        up.PARTICIPANT_NAME AS unregisteredParticipantName
        FROM SCHEDULE s
        LEFT JOIN SCHEDULE_PARTICIPANT sp ON s.ID = sp.SCHEDULE_ID
        LEFT JOIN USER u ON sp.USER_ID = u.ID
        LEFT JOIN UNREGISTERED_PARTICIPANT up ON s.ID = up.SCHEDULE_ID
        WHERE s.ID = #{scheduleId}
    </select>

    <select id="getScheduleList" resultType="com.planu.group_meeting.dto.ScheduleDto$ScheduleListResponse">
        <![CDATA[
        SELECT
            ID,
            TITLE,
            LOCATION,
            START_DATETIME AS startDateTime,
            END_DATETIME AS endDateTime,
            COLOR
        FROM SCHEDULE
        WHERE USER_ID = #{userId}
        AND START_DATETIME >= #{startDateTime}
        AND END_DATETIME <= #{endDateTime}
        ORDER BY START_DATETIME
        ]]>
    </select>


</mapper>