<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.planu.group_meeting.dao.UserDAO">

    <resultMap id="userResultMap" type="com.planu.group_meeting.entity.User">
        <id column="ID" property="id"/>
        <result column="USERNAME" property="username"/>
        <result column="EMAIL" property="email"/>
        <result column="PASSWORD" property="password"/>
        <result column="NAME" property="name"/>
        <result column="ROLE" property="role" javaType="com.planu.group_meeting.entity.common.Role"/>
        <result column="GENDER" property="gender" javaType="com.planu.group_meeting.entity.common.Gender"/>
        <result column="PROFILE_IMG_URL" property="profileImgUrl"/>
        <result column="BIRTH_DATE" property="birthDate"/>
        <result column="PROFILE_STATUS" property="profileStatus"
                javaType="com.planu.group_meeting.entity.common.ProfileStatus"/>
        <result column="CREATED_DATE" property="createdAt"/>
        <result column="UPDATED_DATE" property="updatedAt"/>
    </resultMap>

    <insert id="insertUser" parameterType="com.planu.group_meeting.entity.User">
        INSERT INTO USER (USERNAME, EMAIL, PASSWORD, NAME, ROLE)
        VALUES (#{username}, #{email}, #{password}, #{name}, #{role})
    </insert>

    <select id="findUsernameByEmail" parameterType="String" resultType="String">
        SELECT USERNAME
        FROM USER
        WHERE EMAIL = #{email}
    </select>

    <select id="existsByUsername" parameterType="String" resultType="boolean">
        SELECT COUNT(*) > 0
        FROM USER
        WHERE USERNAME = #{username}
    </select>

    <select id="existsByEmail" parameterType="String" resultType="boolean">
        SELECT COUNT(*) > 0
        FROM USER
        WHERE EMAIL = #{email}
    </select>

    <select id="findByUsername" parameterType="String" resultMap="userResultMap">
        SELECT ID, USERNAME,
        EMAIL,
        PASSWORD,
        NAME,
        ROLE,
        GENDER,
        PROFILE_IMG_URL,
        BIRTH_DATE,
        PROFILE_STATUS,
        CREATED_DATE,
        UPDATED_DATE
        FROM USER
        WHERE USERNAME = #{username}
    </select>

    <update id="updateUserProfile" parameterType="com.planu.group_meeting.entity.User">
        UPDATE USER
        <set>
            <if test="user.username != null">USERNAME = #{user.username},</if>
            <if test="user.password != null">PASSWORD = #{user.password},</if>
            <if test="user.name != null">NAME = #{user.name},</if>
            <if test="user.email != null">EMAIL = #{user.email},</if>
            <if test="user.role != null">ROLE = #{user.role},</if>
            <if test="user.gender != null">GENDER = #{user.gender},</if>
            <if test="user.profileImgUrl != null">PROFILE_IMG_URL = #{user.profileImgUrl},</if>
            <if test="user.birthDate != null">BIRTH_DATE = #{user.birthDate},</if>
            <if test="user.profileStatus != null">PROFILE_STATUS = #{user.profileStatus},</if>
        </set>
        WHERE ID = #{userId}
    </update>

    <update id="updatePasswordByUsername">
        UPDATE USER
        SET PASSWORD = #{newPassword}
        WHERE USERNAME = #{username}
    </update>

    <select id="existsBirthdayByDate">
        SELECT EXISTS (
        SELECT 1
        FROM FRIEND F
        JOIN USER U ON F.FROM_USER_ID = U.ID
        WHERE F.FRIEND_STATUS = 'FRIEND' AND
        TO_USER_ID = ${userId} AND MONTH(U.BIRTH_DATE) = MONTH(#{date}) AND DAY(U.BIRTH_DATE) = DAY(#{date})
        )
    </select>

    <select id="findBirthdayByDate">
        <![CDATA[
        SELECT DATE_FORMAT(U.BIRTH_DATE, '%m-%d') AS date,
               GROUP_CONCAT(U.NAME SEPARATOR ', ') AS names
        FROM FRIEND F
        JOIN USER U ON F.FROM_USER_ID = U.ID
        WHERE F.FRIEND_STATUS = 'FRIEND'
          AND TO_USER_ID = #{userId}
          AND (
            DATE_FORMAT(CONCAT(DATE_FORMAT(#{startDate}, '%Y'), DATE_FORMAT(U.BIRTH_DATE, '-%m-%d')), '%Y-%m-%d')
            BETWEEN DATE_FORMAT(#{startDate}, '%Y-%m-%d')
            AND DATE_FORMAT(#{endDate}, '%Y-%m-%d')
          )
        GROUP BY DATE_FORMAT(U.BIRTH_DATE, '%m-%d')
    ]]>
    </select>

    <select id="findNameById">
        SELECT name
        FROM USER
        WHERE id = #{userId};
    </select>
</mapper>
