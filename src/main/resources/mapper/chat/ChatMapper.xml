<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.planu.group_meeting.chat.dao.ChatDAO">

    <insert id="saveChatMessage" useGeneratedKeys="true" keyProperty="id" parameterType="com.planu.group_meeting.chat.dto.ChatMessage">
        INSERT INTO CHAT_MESSAGE (SENDER_ID, GROUP_ID, MESSAGE_TYPE, MESSAGE)
        VALUES (#{userId}, #{groupId}, #{type}, #{content})
    </insert>


    <insert id="saveMessageStatus" parameterType="com.planu.group_meeting.chat.dto.MessageStatus">
        INSERT INTO MESSAGE_STATUS (MESSAGE_ID, USER_ID)
        VALUES (#{messageId}, #{userId});
    </insert>

    <select id="getChatInfo" parameterType="long" resultType="com.planu.group_meeting.chat.dto.ChatInfo">
        SELECT
        (SELECT MESSAGE
        FROM CHAT_MESSAGE
        WHERE GROUP_ID = #{groupId}
        ORDER BY CREATED_DATE DESC
        LIMIT 1) AS lastChat,

        (SELECT DATE_FORMAT(CREATED_DATE, '%Y-%m-%d')
        FROM CHAT_MESSAGE
        WHERE GROUP_ID = #{groupId}
        ORDER BY CREATED_DATE DESC
        LIMIT 1) AS lastChatDate,

        (SELECT DATE_FORMAT(CREATED_DATE, '%H:%i')
        FROM CHAT_MESSAGE
        WHERE GROUP_ID = #{groupId}
        ORDER BY CREATED_DATE DESC
        LIMIT 1) AS lastChatTime
    </select>

    <select id="countUnreadChatByUserAndGroup" resultType="int">
        SELECT COUNT(*)
        FROM MESSAGE_STATUS ms
        INNER JOIN CHAT_MESSAGE cm ON ms.MESSAGE_ID = cm.ID
        WHERE ms.USER_ID = #{userId}
        AND cm.GROUP_ID = #{groupId}
        AND ms.IS_READ = FALSE
    </select>

    <select id="existsByIdAndGroupId" resultType="int">
        SELECT COUNT(*)
        FROM CHAT_MESSAGE
        WHERE ID = #{messageId}
        AND GROUP_ID = #{groupId}
    </select>

    <update id="markAsRead">
        UPDATE MESSAGE_STATUS
        SET IS_READ = TRUE, UPDATED_DATE = CURRENT_TIMESTAMP
        WHERE USER_ID = #{userId}
        AND MESSAGE_ID = #{messageId}
    </update>

    <select id="countUnreadByMessageId" resultType="int">
        SELECT COUNT(*)
        FROM MESSAGE_STATUS
        WHERE MESSAGE_ID = #{messageId}
        AND IS_READ = FALSE
    </select>

    <resultMap id="ChatMessageMap" type="com.planu.group_meeting.chat.dto.ChatMessage">
        <id property="id" column="ID"/>
        <result property="userId" column="SENDER_ID"/>
        <result property="groupId" column="GROUP_ID"/>
        <result property="type" column="MESSAGE_TYPE"/>
        <result property="content" column="MESSAGE"/>
        <result property="createdDate" column="CREATED_DATE"/>
        <result property="updatedDate" column="UPDATED_DATE"/>
    </resultMap>

    <select id="findById" resultMap="ChatMessageMap">
        SELECT ID, SENDER_ID, GROUP_ID, MESSAGE_TYPE, MESSAGE, CREATED_DATE, UPDATED_DATE
        FROM CHAT_MESSAGE
        WHERE ID = #{messageId}
    </select>

    <select id="findChatMessages" resultMap="ChatMessageMap">
        SELECT ID, SENDER_ID, GROUP_ID, MESSAGE_TYPE, MESSAGE, CREATED_DATE, UPDATED_DATE
        FROM CHAT_MESSAGE
        WHERE GROUP_ID = #{groupId}
        <if test="messageId != null">
            AND ID &lt; #{messageId}
        </if>
        ORDER BY ID DESC
        LIMIT #{limit}
    </select>

    <select id="getMessageIdsByGroupAndRange" resultType="java.lang.Long">
        SELECT ID FROM CHAT_MESSAGE
        WHERE GROUP_ID = #{groupId}
        AND ID BETWEEN #{startId} AND #{endId}
        ORDER BY ID ASC
    </select>

    <update id="updateMessageStatusAsRead">
        UPDATE MESSAGE_STATUS
        SET IS_READ = TRUE
        WHERE USER_ID = #{userId}
        AND MESSAGE_ID IN (
        SELECT ID FROM CHAT_MESSAGE WHERE GROUP_ID = #{groupId}
        )
    </update>
</mapper>